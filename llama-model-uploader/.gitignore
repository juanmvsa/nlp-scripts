# byte-compiled / optimized / dll files
__pycache__/
*.py[cod]
*$py.class

# c extensions
*.so

# distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# pyinstaller
#  usually these files are written by a python script from a template
#  before pyinstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# installer logs
pip-log.txt
pip-delete-this-directory.txt

# unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# translations
*.mo
*.pot

# django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# flask stuff:
instance/
.webassets-cache

# scrapy stuff:
.scrapy

# sphinx documentation
docs/_build/

# pybuilder
.pybuilder/
target/

# jupyter notebook
.ipynb_checkpoints

# ipython
profile_default/
ipython_config.py

# pyenv
#   for a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   according to pypa/pipenv#598, it is recommended to include pipfile.lock in version control.
#   however, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#pipfile.lock

# poetry
#   similar to pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   this is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   similar to pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# pep 582; used by e.g. github.com/david-oit/pyflow and github.com/pdm-project/pdm
__pypackages__/

# celery stuff
celerybeat-schedule
celerybeat.pid

# sagemath parsed files
*.sage.py

# environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# spyder project settings
.spyderproject
.spyproject

# rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# cython debug symbols
cython_debug/

# ruff
.ruff_cache/

# uv
.uv_cache/

# local development files
.vscode/
.idea/
*.swp
*.swo
*~

# temporary files
tmp/
temp/
.tmp/

# model files (large files that shouldn't be in git)
*.pth
*.bin
*.safetensors
*.model
consolidated.*
pytorch_model.*
model.safetensors*
tokenizer.json

# huggingface cache
.cache/
transformers_cache/

# mac os
.DS_Store
.AppleDouble
.LSOverride

# windows
Thumbs.db
ehthumbs.db
Desktop.ini

# linux
*~

# logs
*.log
logs/

# secrets and tokens
.env.local
.env.*.local
secrets.json
tokens.txt
*.key
*.pem
