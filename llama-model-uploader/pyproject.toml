[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "llama-model-uploader"
version = "1.0.0"
description = "A comprehensive toolkit for converting and uploading fine-tuned Llama-3.2 models to Hugging Face Hub"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Juan VÃ¡squez", email = "juanmvs@pm.me"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.9"
dependencies = [
    "huggingface_hub>=0.19.0",
    "transformers>=4.43.0",
    "torch>=2.0.0",
    "tokenizers>=0.15.0",
    "requests>=2.25.0",
    "tqdm>=4.64.0",
    "packaging>=20.0",
]

[project.optional-dependencies]
# optional dependencies for better performance
accelerate = [
    "accelerate>=0.24.0",
    "safetensors>=0.4.0",
]

# spacy tokenizer (more reliable than sentencepiece)
spacy = [
    "spacy>=3.7.0",
    "spacy-transformers>=1.3.0",
]

# sentencepiece (fallback option, may have build issues)
sentencepiece = [
    "sentencepiece>=0.1.97,<0.2.0",
]

# development dependencies
dev = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.0.290",
]

# all optional dependencies (prioritizes spacy over sentencepiece)
all = [
    "llama-model-uploader[accelerate,spacy]",
]

[project.urls]
Homepage = "https://github.com/nlp-scripts/llama-model-uploader"
Repository = "https://github.com/nlp-scripts/llama-model-uploader"
Issues = "https://github.com/nlp-scripts/llama-model-uploader/issues"
Documentation = "https://github.com/nlp-scripts/llama-model-uploader#readme"

[project.scripts]
llama-upload = "llama_uploader.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["llama_uploader"]

[tool.hatch.build.targets.sdist]
include = [
    "/llama_uploader",
    "/README.md",
    "/pyproject.toml",
]

[tool.black]
line-length = 100
target-version = ["py39", "py310", "py311", "py312", "py313"]
include = '\.pyi'

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.ruff]
target-version = "py39"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
